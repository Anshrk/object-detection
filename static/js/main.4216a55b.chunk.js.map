{"version":3,"sources":["assets/github.svg","draw.js","App.jsx","index.js"],"names":["module","exports","drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","color","Math","floor","random","toString","lineWidth","strokeStyle","font","fillStyle","beginPath","fillText","rect","stroke","App","webcamRef","useRef","canvasRef","detect","net","a","current","video","readyState","videoWidth","videoHeight","obj","console","log","getContext","useEffect","cocossd","setInterval","runCoco","id","className","ref","muted","href","src","githubIM","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,oC,0VCA9BC,EAAW,SAAEC,EAAYC,GAClCD,EAAWE,SAAQ,SAAAC,GAAe,IAAD,cACCA,EAAU,KADX,GACtBC,EADsB,KACnBC,EADmB,KAChBC,EADgB,KACTC,EADS,KAEvBC,EAAOL,EAAU,MAGjBM,EAAQ,IAAMC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAChEZ,EAAIa,UAAY,EAChBb,EAAIc,YAAcN,EAClBR,EAAIe,KAAO,aACXf,EAAIgB,UAAYR,EAIhBR,EAAIiB,YACJjB,EAAIkB,SAASX,EAAMJ,EAAGC,GACtBJ,EAAImB,KAAKhB,EAAGC,EAAGC,EAAOC,GACtBN,EAAIoB,a,kBCgEGC,MAtEf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAGnBE,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,yDAEkB,qBAAtBL,EAAUM,SACK,OAAtBN,EAAUM,SAC6B,IAAvCN,EAAUM,QAAQC,MAAMC,WAJb,wBAOLD,EAAQP,EAAUM,QAAQC,MAC1BE,EAAaT,EAAUM,QAAQC,MAAME,WACrCC,EAAcV,EAAUM,QAAQC,MAAMG,YAG5CV,EAAUM,QAAQC,MAAMxB,MAAQ0B,EAChCT,EAAUM,QAAQC,MAAMvB,OAAS0B,EAGjCR,EAAUI,QAAQvB,MAAQ0B,EAC1BP,EAAUI,QAAQtB,OAAS0B,EAjBhB,UAoBON,EAAID,OAAOI,GApBlB,QAoBLI,EApBK,OAqBXC,QAAQC,IAAIF,GAENjC,EAAMwB,EAAUI,QAAQQ,WAAW,MAIzCtC,EAASmC,EAAKjC,GA3BH,4CAAH,sDA2CZ,OAZAqC,qBAAU,YACK,uCAAG,4BAAAV,EAAA,sEAEIW,SAFJ,OAERZ,EAFQ,OAGda,aAAY,WACVd,EAAOC,KACN,IALW,2CAAH,qDAObc,KAEA,IAGA,oCACA,wBAAIC,GAAG,UAAP,oBACA,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,IAAD,CAAQD,GAAG,SACTE,IAAKrB,EACLsB,OAAO,IAGT,4BAAQH,GAAG,SACTE,IAAKnB,MAIX,yBAAKiB,GAAG,UACN,sCAAW,uBAAGI,KAAK,6BAAR,gBAAX,0BAAsF,uBAAGA,KAAK,8CAAR,SAAiE,uBAAGA,KAAK,8CAA6C,yBAAKC,IAAKC,IAAUC,IAAI,oBCtE1OC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4216a55b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.1bb02710.svg\";","export const drawRect = ( detections, ctx ) => {\n    detections.forEach(prediction => {\n        const [x, y, width, height] = prediction['bbox'];\n        const text = prediction['class'];\n\n        // styling the lines and font\n        const color = '#' + Math.floor(Math.random()*16777215).toString(16);\n        ctx.lineWidth = 5;\n        ctx.strokeStyle = color;\n        ctx.font = '30px Arial';\n        ctx.fillStyle = color;\n        \n\n        // drawing the line\n        ctx.beginPath()\n        ctx.fillText(text, x, y)\n        ctx.rect(x, y, width, height)\n        ctx.stroke()\n        \n    });\n};","// Import dependencies\nimport React, { useRef, useEffect } from \"react\";\n// eslint-disable-next-line\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\n\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport {drawRect} from \"./draw\";\nimport githubIM from \"./assets/github.svg\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n      console.log(obj);\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n      drawRect(obj, ctx);\n    }\n  };\n\n  useEffect(()=>{\n    const runCoco = async () => {\n      // cocoss.load() reads the web cam\n      const net = await cocossd.load();\n      setInterval(() => {\n        detect(net);\n      }, 10);\n    };\n    runCoco();\n\n  },[]);\n\n  return (\n    <>\n    <h1 id=\"header\">Object Detection</h1>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam id=\"webcam\"\n          ref={webcamRef}\n          muted={true} \n        />\n\n        <canvas id=\"canvas\"\n          ref={canvasRef}\n        />\n      </header>\n    </div>\n    <div id=\"footer\">\n      <p>Made by <a href=\"https://github.com/anshrk\">Ansh Kashyap</a>, source code availabe <a href=\"https://github.com/anshrk/object-detection\">here</a></p><a href=\"https://github.com/anshrk/object-detection\"><img src={githubIM} alt=\"Github Logo\" /></a>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}